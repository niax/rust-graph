var searchIndex = {};
searchIndex['graph'] = {"items":[[0,"","graph",""],[1,"Graph","","Base Graph implementation"],[1,"Edge","","Represents a directed edge within a Graph"],[11,"data","","",0],[11,"dest","","",0],[1,"ShortestPathResult","","Structure used as the return value of calculating the shortest path"],[11,"path","","The node identifiers for each node in the calculated path",1],[11,"cost","","The cost of the path, calculated as the sum of edge data for\neach edge on the path",1],[10,"new","","Create a new Graph",2],[10,"get","","Get the value for the given NodeIdentifier",2],[10,"insert","","Insert a value into the graph, returns the node identifier",2],[10,"connect","","Connect two nodes in the graph.",2],[10,"connected","","Test if two nodes are connected",2],[10,"connection","","Get the edge between nodes.",2],[10,"connections","","Get a complete list of edges from the node indentified by `for_node`",2],[10,"visit_breadth_first","","Traverse the graph, visiting each node directly, or indirectly, connected to the\nnode identified by `from_index`.\n \nCalls `visitor` with the value of each node on the trip,\nvisiting sibling nodes first before decending deeper into the graph.\nIn the event of cycles, each node is visited only once.",2],[10,"iter","","Iterate over the nodes of the graph",2],[10,"node_count","","Get the number of nodes in the graph",2],[10,"bfs","","Search the graph for a node with the value `wanted`.\nReturns true if the value is in the graph, false otherwise.",2],[10,"contains","","Searches the graph for the first node with the `value` given.\n \nNote that this is different from `bfs` which conserns itself\nwith connectedness.",2],[10,"contains_ref","","",2],[10,"insert_all","","Insert a slice of values into the graph",2],[10,"connect_all","","Connects many nodes together",2],[10,"fmt","","",2],[10,"fmt","","",0],[10,"shortest_path","","Finds the shortest path between two nodes.",2],[4,"NodeIdentifier","","Identifier for nodes in a Graph"]],"paths":[[1,"Edge"],[1,"ShortestPathResult"],[1,"Graph"]]};
initSearch(searchIndex);
